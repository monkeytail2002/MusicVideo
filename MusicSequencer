/**
 * Angus MacDonald 15009351
 * Tutor: Karen MacKay
 * Music Player Animation
 * Version 1 09/11/18
 */


package musicplayer;

import java.awt.*;
import java.io.*;
import javax.sound.midi.*;
import javax.swing.*;


public class MusicSequencer implements ControllerEventListener{
	
	
	static JFrame frame = new JFrame("My First Music Video"); //Sets JFrame
	static MyDrawPanel ml;
	
	
	public void setUpGui()
	{
  
  //Sets up the gui
		ml = new MyDrawPanel();
		frame.setContentPane(ml);
		frame.setBounds(30,30,300,300);
		frame.setVisible(true);
	}
	
	
	public void go()
	{
		setUpGui();
	
  //Catches exception for music sequencer and track
		try {
    //Sets up sequencers
    
			Sequencer sequencer = MidiSystem.getSequencer();
			sequencer.open();
			sequencer.addControllerEventListener(ml, new int[] {127});
			Sequence seq = new Sequence(Sequence.PPQ,4);
			Track track = seq.createTrack();
			
			int r = 0;
			for (int i = 0;i<60;i+=4) {
				r = (int) ((Math.random()*50)+1);
				track.add(makeEvent(144,1,r,100,i));  //Creates tracks
				track.add(makeEvent(176,1,127,0,i));
				track.add(makeEvent(128,1,r,100,i+2));
			}
			
			sequencer.setSequence(seq);
			sequencer.start();
			sequencer.setTempoInBPM(220);
			
		} catch (Exception ex) {ex.printStackTrace();}
	}
	
	public void controlChange(ShortMessage event) {
		System.out.println("la");
	}
	
	public MidiEvent makeEvent(int comd, int chan, int one, int two, int tick)
	{
		MidiEvent event = null;
		try {
    
    //Sets up a short message which commands when a beat plays, and when a track should play.
			ShortMessage a = new ShortMessage();
			a.setMessage(comd,chan,one,two);
			event = new MidiEvent(a,tick);
		} catch(Exception e) {}
		return event;
	}
	
	class MyDrawPanel extends JPanel implements ControllerEventListener{
		//Inner class
		boolean msg = false;
		
		public void controlChange(ShortMessage event) {
			msg = true;
			repaint();
		}

		public void paintComponent(Graphics g) {
			if (msg) {
				Graphics2D g2 = (Graphics2D) g;
				//Sets up and plays a random rectangle whena  note plays
				int red = (int) (Math.random()*255);
				int green = (int) (Math.random()*255);
				int blue = (int) (Math.random()*255);
				
				g.setColor(new Color(red,green,blue));
				
			
				int ht = (int) (Math.random()*120+10);
				int wdh = (int) (Math.random()*120+10);
				int x = (int) (Math.random()*40+10);
				int y = (int) (Math.random()*40+10);
				g.fillRect(x, y, ht, wdh);

				msg=false;
			}
		}
		

	}

}
